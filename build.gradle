buildscript {
    ext {
        baseImage = "omar-base"
        dockerStatementsOverride = {
           [
              "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
              "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar \$HOME/",
              "ENV SPRING_CLOUD_CONFIG_ENABLED=true \
                SPRING_CLOUD_DISCOVERY_ENABLED=true",
              "EXPOSE 8080",
              "WORKDIR /home/omar",
              "CMD java -Xms256m -Xmx1024m -Dspring.profiles.active=production -Djava.security.egd=file:/dev/./urandom -jar ./${project.name}-${buildVersion}-${buildVersionTag}.jar"
           ]
     }
    }
    if(System.env.OMAR_COMMON_PROPERTIES)
    {
        apply from: System.env.OMAR_COMMON_PROPERTIES
    }

    ext {
        springBootVersion = "${springBootV}"
    }
    repositories {
        mavenLocal()
        maven { url "${ossimMavenProxy}" }
        if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
            maven { url "https://repo.grails.org/grails/core" }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "idea"
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url "${ossimMavenProxy}" }
    if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
        mavenCentral()
    }
}


ext {
    springCloudVersion = "${springCloudDependencyV}"
}

dependencies {
    compile "de.codecentric:spring-boot-admin-starter-client:${springBootAdminStarterClientV}"
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-aws')
    compile('org.springframework.cloud:spring-cloud-starter-config')

    compile("com.github.derjust:spring-data-dynamodb:${springDataDynamodbV}")
    compile("com.amazonaws:aws-java-sdk-dynamodb:1.11.93")

    compile('org.codehaus.groovy:groovy')
    compile('org.codehaus.groovy:groovy-json')

    compile('io.springfox:springfox-swagger-ui:2.0.1')
    compile('io.springfox:springfox-swagger2:2.0.1')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
